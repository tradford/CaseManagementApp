@page "/attorneys/details"
@using Microsoft.EntityFrameworkCore
@using CaseManagementApp.Models
@using Microsoft.AspNetCore.Authorization
@inject IAttorneyRepository AttorneyRepository
@inject NavigationManager NavigationManager

@attribute [Authorize(Roles = "Attorney, Paralegal, Admin")]

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Attorney</h2>
    <hr />
    @if (attorney is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@attorney.Name</dd>
            <dt class="col-sm-2">Email</dt>
            <dd class="col-sm-10">@attorney.Email</dd>
            <dt class="col-sm-2">PhoneNumber</dt>
            <dd class="col-sm-10">@attorney.PhoneNumber</dd>
        </dl>
        <div>
            <a href="@($"/attorneys/edit?id={attorney.Id}")">Edit</a> |
            <a href="@($"/attorneys")">Back to List</a>
        </div>
    }
</div>

@code {
    private Attorney? attorney;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        attorney = await AttorneyRepository.GetByIdAsync(Id);

        if (attorney is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
