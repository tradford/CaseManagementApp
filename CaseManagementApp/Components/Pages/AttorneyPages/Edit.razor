@page "/attorneys/edit"
@using Microsoft.EntityFrameworkCore
@using CaseManagementApp.Models
@using Microsoft.AspNetCore.Authorization
@inject IAttorneyRepository AttorneyRepository
@inject NavigationManager NavigationManager

@attribute [Authorize(Roles = "Attorney, Paralegal, Admin")]

<PageTitle>Edit</PageTitle>

<h1>Edit</h1>

<h2>Attorney</h2>
<hr />
@if (Attorney is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-4">
            <EditForm method="post" Model="Attorney" OnValidSubmit="UpdateAttorney" FormName="edit" Enhance>
                <DataAnnotationsValidator />
                <ValidationSummary role="alert" />
                <input type="hidden" name="Attorney.Id" value="@Attorney.Id" />
                <div class="mb-3">
                    <label for="name" class="form-label">Name:</label>
                    <InputText id="name" @bind-Value="Attorney.Name" class="form-control" aria-required="true" />
                    <ValidationMessage For="() => Attorney.Name" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="email" class="form-label">Email:</label>
                    <InputText id="email" @bind-Value="Attorney.Email" class="form-control" />
                    <ValidationMessage For="() => Attorney.Email" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="phonenumber" class="form-label">PhoneNumber:</label>
                    <InputText id="phonenumber" @bind-Value="Attorney.PhoneNumber" class="form-control" />
                    <ValidationMessage For="() => Attorney.PhoneNumber" class="text-danger" />
                </div>
                <button type="submit" class="btn btn-primary">Save</button>
            </EditForm>
        </div>
    </div>
}

<div>
    <a href="/attorneys">Back to List</a>
</div>

@code {
    [SupplyParameterFromQuery]
    private int Id { get; set; }

    [SupplyParameterFromForm]
    private Attorney? Attorney { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Attorney ??= await AttorneyRepository.GetByIdAsync(Id);

        if (Attorney is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task UpdateAttorney()
    {
        if (Attorney is not null)
        {
            await AttorneyRepository.UpdateAsync(Attorney);
            NavigationManager.NavigateTo("/attorneys");
        }
    }
}
