@page "/clients"
@using CaseManagementApp.Models
@using Microsoft.AspNetCore.Components.QuickGrid
@inject IClientRepository ClientRepository
@inject NavigationManager NavigationManager

<PageTitle>Client Index</PageTitle>

<h2>Client Index</h2>

<p>
    <a href="clients/create">Create New Client</a>
</p>

@if (clients is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <QuickGrid TGridItem="Client" Class="table" Items="clients.AsQueryable()">
        <PropertyColumn Property="client => client.FullName" Title="Full Name" />
        <PropertyColumn Property="client => client.Email" Title="Email" />
        <PropertyColumn Property="client => client.PhoneNumber" Title="Phone Number" />

        <TemplateColumn Context="client">
            <a href="@($"clients/edit?id={client.Id}")">Edit</a> |
            <a href="@($"clients/details?id={client.Id}")">Details</a> |
            <a class="btn btn-danger" href="@($"clients/delete?id={client.Id}")">Delete</a>
        </TemplateColumn>
    </QuickGrid>
}

@code {
    private List<Client>? clients;

    protected override async Task OnInitializedAsync()
    {
        clients = await ClientRepository.GetAllAsync();
    }
}