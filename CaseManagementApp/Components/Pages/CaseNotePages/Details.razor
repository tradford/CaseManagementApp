@page "/casenotes/details"
@using CaseManagementApp.Models
@using Microsoft.AspNetCore.Authorization
@inject ICaseNoteRepository CaseNoteRepository
@inject NavigationManager NavigationManager

@attribute [Authorize(Roles = "Attorney, Paralegal, Admin")]

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>CaseNote</h2>
    <hr />
    @if (casenote is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">BrownsteinCaseId</dt>
            <dd class="col-sm-10">@casenote.BrownsteinCaseId</dd>
            <dt class="col-sm-2">AttorneyId</dt>
            <dd class="col-sm-10">@casenote.AttorneyId</dd>
            <dt class="col-sm-2">NoteText</dt>
            <dd class="col-sm-10">@casenote.NoteText</dd>
            <dt class="col-sm-2">CreatedAt</dt>
            <dd class="col-sm-10">@casenote.CreatedAt</dd>
        </dl>
        <div>
            <a href="@($"/casenotes/edit?id={casenote.Id}")">Edit</a> |
            <a href="/casenotes">Back to List</a>
        </div>
    }
</div>

@code {
    private CaseNote? casenote;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        casenote = await CaseNoteRepository.GetByIdAsync(Id);

        if (casenote is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
