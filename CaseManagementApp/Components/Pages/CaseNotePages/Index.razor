@page "/casenotes"

@using CaseManagementApp.Models
@using Microsoft.AspNetCore.Components.QuickGrid
@inject ICaseNoteRepository CaseNoteRepository

<PageTitle>Case Notes</PageTitle>

<h1>Case Notes</h1>

<p>
    <a href="/casenotes/1">Create New</a> @* Replace 1 dynamically if needed *@
</p>

@if (CaseNotes is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <QuickGrid TGridItem="CaseNote" Class="table" Items="CaseNotes.AsQueryable()">
        <PropertyColumn Property="casenote => casenote.BrownsteinCaseId" />
        <PropertyColumn Property="casenote => casenote.AttorneyId" />
        <PropertyColumn Property="casenote => casenote.NoteText" />
        <PropertyColumn Property="casenote => casenote.CreatedAt" />

        <TemplateColumn Context="casenote">
            <a href="@($"casenotes/edit?id={casenote.Id}")">Edit</a> |
            <a href="@($"casenotes/details?id={casenote.Id}")">Details</a> |
            <a href="@($"casenotes/delete?id={casenote.Id}")">Delete</a>
        </TemplateColumn>
    </QuickGrid>
}

@code {
    private List<CaseNote>? CaseNotes;

    // Optional: Replace this with a dynamic CaseId if filtering is needed
    private int CaseId = 1;

    protected override async Task OnInitializedAsync()
    {
        CaseNotes = await CaseNoteRepository.GetByCaseIdAsync(CaseId);
    }
}
